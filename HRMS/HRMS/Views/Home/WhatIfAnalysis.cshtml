@model WhatIfAnalysisViewModel
@{
    var DateString = Model.Date.ToString("dd-MM-yyyy");
    ViewData["Title"] = Model.Date.ToString("dd MMMM yyyy") + " Analysis";
    var xlabel = Newtonsoft.Json.JsonConvert.SerializeObject(Model.DatesLabel);
    var PredADR = Newtonsoft.Json.JsonConvert.SerializeObject(Model.PredictedAdr);
    var AdjADR = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AdjustedAdr);
    var PredRP = Newtonsoft.Json.JsonConvert.SerializeObject(Model.PredictedRevPar);
    var AdjRP = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AdjustedRevPar);

    var adrdiff = Math.Abs(Convert.ToDouble(Model.PredictedAdr[Model.PredictedAdr.Count - 1]) - Convert.ToDouble(Model.AdjustedAdr[Model.AdjustedAdr.Count - 1]));
    var revpardiff = Math.Abs(Convert.ToDouble(Model.PredictedRevPar[Model.PredictedRevPar.Count - 1]) - Convert.ToDouble(Model.AdjustedRevPar[Model.AdjustedRevPar.Count - 1]));

    var selectedDatePredAdr = Convert.ToDouble(Model.PredictedAdr[Model.PredictedAdr.Count - 1]);
    var selectedDatePredRP = Convert.ToDouble(Model.PredictedRevPar[Model.PredictedRevPar.Count - 1]);
    var selectedDateAdjAdr = Convert.ToDouble(Model.AdjustedAdr[Model.AdjustedAdr.Count - 1]);
    var selectedDateAdjRP = Convert.ToDouble(Model.AdjustedRevPar[Model.AdjustedRevPar.Count - 1]);
}

<!-- pageheader -->
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="page-header">
            <h2 class="pageheader-title">@ViewData["Title"]</h2>
            <div class="page-breadcrumb">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a asp-action="Index" class="breadcrumb-link">Dashboard</a></li>
                        <li class="breadcrumb-item" aria-current="page">
                            <a asp-action="Details" asp-controller="Home" asp-route-selected="@DateString" class="breadcrumb-link">Details</a>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">Analysis</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
</div>


<!-- Average Daily Rate What-If -->
<div class="row">
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <h5 class="card-header">Average Daily Rate</h5>
            <div class="card-body">
                <canvas id="averageDailyRate" width="400" height="150"></canvas>
            </div>
            <div class="card-body border-top">
                <div class="row">
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12 p-3">
                        <h4> Difference Calculated: Rp @adrdiff.ToString("N0")</h4>
                        @*<p>
                            Use this rate.
                        </p>*@
                    </div>
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 p-3">
                        <h2 class="font-weight-normal mb-3"><span>Rp @selectedDatePredAdr.ToString("N0")</span></h2>
                        <div class="mb-0 mt-3 legend-item">
                            <span class="fa-xs text-primary mr-1 legend-title "><i class="fa fa-fw fa-square-full"></i></span>
                            <span class="legend-text">Predicted ADR</span>
                        </div>
                    </div>
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 p-3">
                        <h2 class="font-weight-normal mb-3">
                            <span>Rp @selectedDateAdjAdr.ToString("N0")</span>
                        </h2>
                        <div class="text-muted mb-0 mt-3 legend-item"> <span class="fa-xs text-secondary mr-1 legend-title"><i class="fa fa-fw fa-square-full"></i></span><span class="legend-text">Adjusted ADR</span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- RevPAR What-If -->
    <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
        <div class="card">
            <h5 class="card-header">Revenue Per Average Room</h5>
            <div class="card-body">
                <canvas id="revenuePerAvg" width="400" height="150"></canvas>
            </div>
            <div class="card-body border-top">
                <div class="row">
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-12 col-sm-12 col-12 p-3">
                        <h4> Difference Calculated: Rp @revpardiff.ToString("N0")</h4>
                        @*<p>
                            Use this rate.
                        </p>*@
                    </div>
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 p-3">
                        <h2 class="font-weight-normal mb-3"><span>Rp @selectedDatePredRP.ToString("N0")</span></h2>
                        <div class="mb-0 mt-3 legend-item">
                            <span class="fa-xs text-primary mr-1 legend-title "><i class="fa fa-fw fa-square-full"></i></span>
                            <span class="legend-text">Predicted RevPAR</span>
                        </div>
                    </div>
                    <div class="offset-xl-1 col-xl-3 col-lg-3 col-md-6 col-sm-12 col-12 p-3">
                        <h2 class="font-weight-normal mb-3">
                            <span>Rp @selectedDateAdjRP.ToString("N0")</span>
                        </h2>
                        <div class="text-muted mb-0 mt-3 legend-item"> <span class="fa-xs text-secondary mr-1 legend-title"><i class="fa fa-fw fa-square-full"></i></span><span class="legend-text">Adjusted RevPAR</span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Line Chart -->
<script type="text/javascript">
    $(function () {
        var ctx = document.getElementById('averageDailyRate').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: @Html.Raw(xlabel),
                datasets: [{
                    label: 'Predicted ADR',
                    data: @Html.Raw(PredADR),
                    backgroundColor: "rgba(89, 105, 255,0.5)",
                    borderColor: "rgba(89, 105, 255,0.7)",
                    borderWidth: 2

                }, {
                    label: 'Adjusted ADR',
                    data: @Html.Raw(AdjADR),
                    backgroundColor: "rgba(255, 64, 123,0.5)",
                    borderColor: "rgba(255, 64, 123,0.7)",
                    borderWidth: 2
                }]
            },
            options: {
                legend: {
                    display: true,
                    position: 'bottom',
                    labels: {
                        fontColor: '#71748d',
                        fontSize: 14,
                    }
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + value;
                            }
                        }
                    }]
                },

                scales: {
                    xAxes: [{
                        ticks: {
                            fontSize: 14,
                            fontFamily: 'Circular Std Book',
                            fontColor: '#71748d',
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            fontSize: 14,
                            fontFamily: 'Circular Std Book',
                            fontColor: '#71748d',
                        }
                    }]
                }
            }
        });


        var ctx = document.getElementById('revenuePerAvg').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: @Html.Raw(xlabel),
                datasets: [{
                    label: 'Predicted RevPAR',
                    data: @Html.Raw(PredRP),
                    backgroundColor: "rgba(89, 105, 255,0.5)",
                    borderColor: "rgba(89, 105, 255,0.7)",
                    borderWidth: 2

                }, {
                    label: 'Adjusted RevPAR',
                    data: @Html.Raw(AdjRP),
                    backgroundColor: "rgba(255, 64, 123,0.5)",
                    borderColor: "rgba(255, 64, 123,0.7)",
                    borderWidth: 2
                }]
            },

            options: {
                legend: {
                    display: true,
                    position: 'bottom',
                    labels: {
                        fontColor: '#71748d',
                        fontSize: 14,
                    }
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return '$' + value;
                            }
                        }
                    }]
                },

                scales: {
                    xAxes: [{
                        ticks: {
                            fontSize: 14,
                            fontFamily: 'Circular Std Book',
                            fontColor: '#71748d',
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            fontSize: 14,
                            fontFamily: 'Circular Std Book',
                            fontColor: '#71748d',
                        }
                    }]
                }
            }
        });
    });
</script>

